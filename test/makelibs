#!/bin/bash
# 
# To successfully employ this script, make sure that your bash is in
# the bin - directory or adjust accordingly.
#

DIRS=`find Process -name P?_?`" "`find Process -name P?_??`

print_help(){
  echo "makelibs version 1.1" && echo && \
  echo "options: -c \"make clean\" before compiling" && \
  echo "         -o install single module" && \
  echo "         -j [N] allow N compilations at once" && \
  echo "         -h display this help and exit" && echo
}

defaults(){
  JOBS=2
}

defaults;

while getopts hcoj: OPT
do
  case $OPT in
  c) CLEAN=TRUE ;;
  o) ONE=TRUE ;;
  j) JOBS=$OPTARG ;;
  h) print_help && exit 0 ;;
  \?)
    shift `expr $OPTIND - 1`
    if [ "$1" = "--help" ]; then print_help && exit 0;
    else 
      echo -n "makelibs: error: unrecognized option "
      if [ $OPTARG != "-" ]; then echo "'-$OPTARG'. try '-h'"
      else echo "'$1'. try '-h'"
      fi
      print_help && exit 1
    fi
    shift 1
    OPTIND=1
  esac
done

if [ "$ONE" = "TRUE" ] ; then 
  echo "makelibs: select module ( q) to quit )"
  select DIRS in $DIRS ; do
    if [ "$DIRS" != "" ] ; then 
      SINGLE="TRUE"
      break
    else 
      if [ "$REPLY" = "q" ] || [ "$REPLY" = "Q" ]  ; then exit ; fi
    fi
  done
fi

if ! test -z "g++"; then export CXX="g++"; fi
export CXXFLAGS="-O2 -fuse-cxa-atexit -m64 -O2";
if ! test -z ""; then export LDFLAGS=""; fi
if ! test -z ""; then export LIBS=""; fi
if ! test -z ""; then export CPPFLAGS=""; fi
if ! test -z "gcc"; then export CC="gcc"; fi
if ! test -z "-g -O2"; then export CFLAGS="-g -O2"; fi
if ! test -z "gfortran"; then export FC="gfortran"; fi
if ! test -z "-g -O2"; then export FCFLAGS="-g -O2"; fi
if ! test -z "gcc -E"; then export CPP="gcc -E"; fi
if ! test -z "g++ -E"; then export CXXCPP="g++ -E"; fi

if echo "x86_64-unknown-linux-gnu" | grep -q "i686"; then
    export CXX="$CXX -m32"
    export CC="$CC -m32"
    export LDFLAGS="$LDFLAGS -m32"
fi

for J in $DIRS ; do
  echo "======================"
  echo "$J";
  echo "======================"
  cd $J 
  if test -f configure.in; then
  autoreconf -fi
  ./configure
  if `test "$CLEAN" = "TRUE"` ; then make clean ; fi
  if ! make install -j $JOBS; then
    echo "makeinstall: error: \"make install\" in $I failed"
    exit 1
  fi
  fi
  cd ../..
done
